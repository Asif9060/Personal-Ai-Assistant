#!/usr/bin/env python3\n\"\"\"\nCoqui TTS Voice Testing Script for J.A.R.V.I.S\nTest realistic neural voices before configuring them\n\"\"\"\n\nimport sys\nimport os\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom jarvis.audio import TTS\ntry:\n    from TTS.api import TTS as CoquiTTS\n    COQUI_AVAILABLE = True\nexcept ImportError:\n    COQUI_AVAILABLE = False\n\n\ndef list_coqui_voices():\n    \"\"\"List available Coqui TTS speakers/voices\"\"\"\n    print(\"Coqui TTS High-Quality Neural Voices:\")\n    print(\"=\" * 50)\n    \n    voices = {\n        \"Female Voices\": [\n            \"Claribel Dervla\",  # Irish accent, warm\n            \"Daisy Studious\",   # American, clear\n            \"Gracie Wise\",      # British, elegant\n            \"Tammie Ema\"        # American, friendly\n        ],\n        \"Male Voices\": [\n            \"Alec Trevelyan\",   # British, sophisticated\n            \"Richard Barnes\",   # American, professional\n            \"Tom Kingston\",     # British, warm\n            \"Will Barnes\"       # American, casual\n        ]\n    }\n    \n    for category, voice_list in voices.items():\n        print(f\"\\n{category}:\")\n        for i, voice in enumerate(voice_list, 1):\n            print(f\"  {i}. {voice}\")\n    \n    return voices\n\n\ndef test_coqui_voice(speaker_name):\n    \"\"\"Test a specific Coqui TTS voice\"\"\"\n    if not COQUI_AVAILABLE:\n        print(\"‚ùå Coqui TTS not available. Please install: pip install TTS torch\")\n        return\n    \n    test_phrases = [\n        \"Hello, I am J.A.R.V.I.S., your advanced AI assistant.\",\n        \"How may I assist you today?\",\n        \"I can help you with various tasks using my neural voice synthesis.\",\n        \"This is what I sound like with Coqui TTS technology.\"\n    ]\n    \n    print(f\"\\nüé§ Testing Coqui TTS with speaker: {speaker_name}\")\n    print(\"-\" * 50)\n    \n    try:\n        tts = TTS(voice=speaker_name, rate=170, volume=0.85)\n        \n        for i, phrase in enumerate(test_phrases, 1):\n            print(f\"\\nüì¢ Speaking phrase {i}: {phrase}\")\n            tts.say(phrase)\n            \n            response = input(\"\\n‚è≥ Press Enter for next phrase (or 'q' to quit): \")\n            if response.lower() == 'q':\n                break\n                \n    except Exception as e:\n        print(f\"‚ùå Error testing voice: {e}\")\n        print(\"üí° Trying fallback voice system...\")\n        try:\n            tts = TTS()  # Use default/fallback\n            tts.say(\"Fallback voice system activated.\")\n        except Exception as e2:\n            print(f\"‚ùå Fallback also failed: {e2}\")\n\n\ndef compare_voices():\n    \"\"\"Compare different voice systems\"\"\"\n    test_text = \"Hello, I am J.A.R.V.I.S. This is how I sound.\"\n    \n    print(\"\\nüîÄ Voice System Comparison\")\n    print(\"=\" * 40)\n    \n    systems = [\n        (\"Coqui TTS (Neural)\", \"Claribel Dervla\"),\n        (\"Windows SAPI\", \"Zira\"),\n        (\"Basic pyttsx3\", None)\n    ]\n    \n    for system_name, voice in systems:\n        print(f\"\\nüéØ Testing {system_name}...\")\n        try:\n            if system_name.startswith(\"Coqui\") and not COQUI_AVAILABLE:\n                print(\"‚ùå Coqui TTS not available\")\n                continue\n                \n            tts = TTS(voice=voice)\n            tts.say(test_text)\n            \n            rating = input(f\"Rate {system_name} (1-5): \")\n            print(f\"You rated {system_name}: {rating}/5\")\n            \n        except Exception as e:\n            print(f\"‚ùå {system_name} failed: {e}\")\n\n\ndef interactive_menu():\n    \"\"\"Main interactive menu\"\"\"\n    while True:\n        print(\"\\n\" + \"=\" * 60)\n        print(\"üéôÔ∏è  J.A.R.V.I.S Coqui TTS Voice Testing Suite\")\n        print(\"=\" * 60)\n        \n        if not COQUI_AVAILABLE:\n            print(\"‚ö†Ô∏è  Coqui TTS not installed. Install with:\")\n            print(\"   pip install TTS torch torchaudio soundfile simpleaudio\")\n            print()\n        \n        print(\"Options:\")\n        print(\"1. üé≠ List available Coqui voices\")\n        print(\"2. üé§ Test female voices (Claribel Dervla - recommended)\")\n        print(\"3. üé§ Test male voices (Alec Trevelyan - recommended)\")\n        print(\"4. üîß Test custom voice name\")\n        print(\"5. üîÄ Compare voice systems\")\n        print(\"6. ‚ö° Quick test best voice (Claribel Dervla)\")\n        print(\"7. üö™ Exit\")\n        \n        choice = input(\"\\n‚û§ Enter your choice (1-7): \").strip()\n        \n        if choice == \"1\":\n            list_coqui_voices()\n            \n        elif choice == \"2\":\n            voices = [\"Claribel Dervla\", \"Daisy Studious\", \"Gracie Wise\", \"Tammie Ema\"]\n            print(\"\\nüë© Female Voices:\")\n            for i, voice in enumerate(voices, 1):\n                print(f\"  {i}. {voice}\")\n            \n            try:\n                idx = int(input(\"\\nSelect voice (1-4): \")) - 1\n                if 0 <= idx < len(voices):\n                    test_coqui_voice(voices[idx])\n                else:\n                    print(\"‚ùå Invalid selection\")\n            except ValueError:\n                print(\"‚ùå Invalid input\")\n                \n        elif choice == \"3\":\n            voices = [\"Alec Trevelyan\", \"Richard Barnes\", \"Tom Kingston\", \"Will Barnes\"]\n            print(\"\\nüë® Male Voices:\")\n            for i, voice in enumerate(voices, 1):\n                print(f\"  {i}. {voice}\")\n            \n            try:\n                idx = int(input(\"\\nSelect voice (1-4): \")) - 1\n                if 0 <= idx < len(voices):\n                    test_coqui_voice(voices[idx])\n                else:\n                    print(\"‚ùå Invalid selection\")\n            except ValueError:\n                print(\"‚ùå Invalid input\")\n                \n        elif choice == \"4\":\n            custom_voice = input(\"\\nüîß Enter voice/speaker name: \").strip()\n            if custom_voice:\n                test_coqui_voice(custom_voice)\n            else:\n                print(\"‚ùå No voice name entered\")\n                \n        elif choice == \"5\":\n            compare_voices()\n            \n        elif choice == \"6\":\n            print(\"\\n‚ö° Quick testing best voice: Claribel Dervla\")\n            test_coqui_voice(\"Claribel Dervla\")\n            \n        elif choice == \"7\":\n            print(\"\\nüëã Goodbye!\")\n            break\n            \n        else:\n            print(\"‚ùå Invalid choice. Please select 1-7.\")\n\n\nif __name__ == \"__main__\":\n    interactive_menu()
